@page "/"
@inject GithubApiService api
@inject IJSRuntime jsRuntime

<PageTitle>Portifólio</PageTitle>

<section class="home" id="home">
    <article class="sobre" id="sobre">
        <h1 class="sobre__titulo">João Alencar</h1>
        <p class="sobre__subtitulo">Desenvolvedor Back End C# .NET Jr.</p>

        <div class="sobre__detalhes">
            <img src="@_donoRepositorio?.AvatarUrl" class="sobre__imagem-perfil" alt="imagem perfil" />

            <div class="sobre__descricao">
                <ul class="sobre__lista">
                    <li>
                        Cursando Análise e Desenvolvimento de Sistemas na Faculdade Impacta;
                    </li>
                    <li>
                        Atualmente Estudo C#: ASP.NET CORE (WepApi, Mvc), Windows Forms, Blazor, MAUI;
                    </li>
                    <li>
                        Tenho experiência prática em projetos da plataforma .NET utilizando frameworks conhecidos
                        como Entity Framework e Dapper, autenticação por Cookies e utilizando do Identity ASP.NET;
                    </li>
                    <li>
                        Tenho conhecimento e experiência na contrução de projetos usando DDD, arquitetura em camadas,
                        microsserviços, Clean e SOLID;
                    </li>
                    <li>
                        Algumas tecnologias que tenho interesse são: Flutter e Angular (do qual tenho algum conhecimento
                        básico);
                    </li>

                    <li class="sobre__item--contatos">
                        <a class="sobre__item-contato-link sobre__item-contato-link--linkedin"
                            href="https://www.linkedin.com/in/jo%C3%A3o-a-a6588b129/" target="_blank">
                            <i class="fa-brands fa-linkedin"></i>
                        </a>
                        <a class="sobre__item-contato-link sobre__item-contato-link--github"
                            href="https://github.com/Joaoalen98" target="_blank">
                            <i class="fa-brands fa-github"></i>
                        </a>
                        <a class="sobre__item-contato-link sobre__item-contato-link--email"
                            href="mailto:joao.alencar1497@gmail.com" target="_blank">
                            <i class="fa-solid fa-envelope"></i>
                        </a>
                    </li>

                </ul>
            </div>
        </div>
    </article>

    <article class="skills" id="skills">
        <h2 class="skills__titulo">Minhas Skills</h2>

        <div class="skills__container">
            <div class="skill__card">
                <img class="skill__imagem" src="./assets/images/html5.svg" alt="icone chsarp">
            </div>
            <div class="skill__card">
                <img class="skill__imagem" src="./assets/images/css3.svg" alt="icone chsarp">
            </div>
            <div class="skill__card">
                <img class="skill__imagem" src="./assets/images/javascript.svg" alt="icone chsarp">
            </div>
            <div class="skill__card">
                <img class="skill__imagem" src="./assets/images/csharp.svg" alt="icone chsarp">
            </div>
            <div class="skill__card">
                <img class="skill__imagem" src="./assets/images/angular.svg" alt="icone angular">
            </div>
        </div>
    </article>

    <article class="projetos" id="projetos">
        <h2 class="projetos__titulo">Projetos</h2>

        @if (_repositorios == null)
        {
            <div class="projetos__carregando-container">
                <p class="projetos__legenda-carregando">
                    Carregando...
                </p>
                <i class="fa-solid fa-spinner projetos__icone-carregando"></i>
            </div>
        }
        else
        {
            <div class="projetos__container">
                @foreach (var repositorio in _repositorios)
                {
                    <CardProjeto repositorio="repositorio" />
                }
            </div>
        }
    </article>
</section>


@code {
    private IEnumerable<GithubRepository> _repositorios;
    private Owner _donoRepositorio;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();


        try
        {
            _repositorios = await api.GetRepositorios("joaoalen98");
            _donoRepositorio = await api.GetDonoRepositorio("joaoalen98");
        }
        catch (System.Exception ex)
        {
            await jsRuntime.InvokeAsync<string>("alert", ex.Message);
        }
    }
}
